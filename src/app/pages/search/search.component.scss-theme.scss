@import '~@angular/material/theming';

@mixin search-component-theme($theme) {
    $primary: map-get($theme, primary);
    $accent: map-get($theme, accent);
    $warn: map-get($theme, accent);
    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background); 

    .search-component {
        .secondarycolor {
            color: mat-color($foreground, secondary-text)
        }
        .inputholder, .inputmain {
            // background-color: map-get($background, base);
            color: mat-color($foreground, secondary-text);
            $opacity: 1;
            $backdrop-color: mat-color($background, card, $opacity);
        
            @if (type-of($backdrop-color) == color) {
              // We use invert() here to have the darken the background color expected to be used. If the
              // background is light, we use a dark backdrop. If the background is dark,
              // we use a light backdrop.
              background-color: $backdrop-color;
            }
            @else {
              // If we couldn't resolve the backdrop color to a color value, fall back to using
              // `opacity` to make it opaque since its end value could be a solid color.
              background-color: $backdrop-color;
              opacity: $opacity;
            }
            // ::-webkit-input-placeholder {
            //     @content;
            // }
        }
    }
}